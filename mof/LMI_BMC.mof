/*
 *  Copyright (c) 2014 Dell, Inc. All rights reserved.
 *  Licensed under the GNU Lesser General Public license, version 2.1 or any later version.
 *  Authors: Praveen K Paladugu <praveen_paladugu@dell.com>
 */


[Description("Model an Out of Band Management Controller and capture its features and capabilities")]
class LMI_BMC : CIM_ManagementController
{

/* Multiple IP addresses causing too much complexity
*/
    [Description("This variable, should always capture the latest ipv4 IP/s addresses of BMC."),
    ArrayType("Indexed")]
 //   ModelCorrespondance{"LMI_BMC.IP4Netmasks"}]
    string IP4Addresses[];

    [Description("This variable, should always capture the  ipv4 NetMasks of BMC."),
    ArrayType("Indexed")]
   // ModelCorrespondance{"LMI_BMC.IP4Addresses"}]
    string IP4Netmasks[];

    [Description("This variable captures if the IPv4 addresses are statically set or via DHCP. Possible values are 'DHCP Address'/ 'Static Address'")]
    string IP4AddressSource;

    [Description("This variable, should always capture the latest ipv6 IP/s addresses of BMC."),
    ArrayType("Indexed")]
//    ModelCorrespondance{"LMI_BMC.IP6Netmasks"}]
    string IP6Addresses[];

    [Description("This variable, should always capture the latest ipv6 Netmasks of BMC."),
    ArrayType("Indexed")]
//    ModelCorrespondance{"LMI_BMC.IP6Addresses"}]
    string IP6Netmasks[];

    [Description("This variable captures if the IPv6 addresses are statically set or via DHCP. Possibel values are 'DHCP Address'/ 'Static Address'")]
    string IP6AddressSource;

/* Gateway still needs to be captured.
*/

    [Description("The VLAN setting on the BMC NIC port.")]
    string VLAN;

    [Description ("This variable will capture MAC address of the BMC.") ]
    string PermanentMACAddress;


   [Description("If BMC provides any user friendly interfaces like http, ftp etc, this variable will capture the related URL/s to interact with BMC.")]
    string BMC_URLs[];

    [Description("This variable will capture the version of the firmware installed on the BMC")]
    string FirmwareVersion;

   [Description("This Array will capture the list of protocols supported by the BMC"),
    ArrayType ("Indexed"),
    MaxLen (256)]
//    ModelCorrespondence {"LMI_BMC.SupportedProtoVersion"}  ]
    string SupportedProtos[];

    [Description("This Array will capture the version of the supported protocol listed in the corresponding index of SupportedProtos "),
    ArrayType ("Indexed")]
//    ModelCorrespondence {"LMI_BMC.SupportedProtos" } ]
    string SupportedProtoVersions[];


    [Description("Function to add a new IPv4 address/es to BMC. The passed ipaddresses and netmasks will be assigned to the BMC. A Netmask for every IP address should be present in the input."),
    ValueMap {"0","1","2"},
    Values {"Success", "Failed", "Invalid Argument"}]
    uint32   set_IP4Address(
                [IN, Description ("Set the IP addresses of the BMC, to the input values")]
                string IP4Addresses[],
                [IN, Description ("Set the netmasks to this input values")]
                string Netmasks[],
                [IN, Description ("Set the gateway this input value")]
                string Gateway );


    [Description("Function to assign a new IPv6 address to BMC. The passed ipaddresses and netmasks will be assigned to the BMC. A Netmask for every IP address should be present in the input."),
     ValueMap {"0","1","2"},
     Values {"Success", "Failed", "Invalid Argument"}]
    uint32  set_IP6Address(
                [IN, Description ("Set the IPv6 addresses of the BMC, to the input values")]
                string IP6Addresses[],
                [IN, Description ("Set the netmasks to this input values")]
                string Netmasks[],
                [IN, Description ("Set the gateway on BMC to this input value")]
                string Gateway);



    [Description("Function to assign a VLAN ID to BMC."),
     ValueMap {"0","1","2"},
     Values {"Success", "Failed", "Invalid Argument"}]
    uint32 set_VLAN(
                [IN, Description("Set the VLAN ID of BMC NIC to this input value")]
                string Vlan
                );


    [Description("Some servers have dedicated NIC attached to BMC, some share a LOM used for host n/w communications. This function will let the user know which the case is."),
    ValueMap {"0", "1","2","3","4"},
    Values {"Dedicated", "LOM1","LOM2","LOM3","LOM4"}]
    string get_active_nic();
};

